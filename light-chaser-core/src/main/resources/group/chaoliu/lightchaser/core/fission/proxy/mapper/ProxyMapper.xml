<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="group.chaoliu.lightchaser.core.fission.proxy.mapper.ProxyMapper">

    <insert id="insertProxy" parameterType="Proxy">
        INSERT INTO proxy(
        host, port, proxy_type, cost_time, failed_count, update_time
        <if test="userName != null">, user_name</if>
        <if test="password != null">, password</if>
        <if test="level != null">, `level`</if>
        <if test="isInternet != null">, is_internet</if>
        ) VALUES (
        #{host}, #{port}, #{proxyType}, #{costTime}, #{failedCount}, #{updateTime}
        <if test="userName != null">, #{userName}</if>
        <if test="password != null">, #{password}</if>
        <if test="level != null">, #{level}</if>
        <if test="isInternet != null">, #{isInternet}</if>
        ) ON DUPLICATE KEY UPDATE
        proxy_type = #{proxyType}, cost_time = #{costTime},
        failed_count = #{failedCount}, update_time = #{updateTime}
        <if test="userName != null">, user_name = #{userName}</if>
        <if test="password != null">, password = #{password}</if>
        <if test="level != null">, `level` = #{level}</if>
        <if test="isInternet != null">, is_internet = #{isInternet}</if>
    </insert>

    <insert id="insertBatchProxies">
        INSERT INTO proxy(
        host, port, proxy_type, cost_time, failed_count, update_time, crawl_time,
        user_name, password, `level`, is_internet, domain_key
        ) VALUES
        <foreach collection="proxies" item="proxy" separator=",">
            (
            #{proxy.host}, #{proxy.port}, #{proxy.proxyType}, #{proxy.costTime},
            #{proxy.failedCount}, #{proxy.updateTime}, #{proxy.crawlTime}
            <choose>
                <when test="proxy.userName != null ">, #{proxy.userName}</when>
                <otherwise>, ''</otherwise>
            </choose>
            <choose>
                <when test="proxy.password != null ">, #{proxy.password}</when>
                <otherwise>, ''</otherwise>
            </choose>
            <choose>
                <when test="proxy.level != null ">, #{proxy.level}</when>
                <otherwise>, 0</otherwise>
            </choose>
            <choose>
                <when test="proxy.isInternet != null ">, #{proxy.isInternet}</when>
                <otherwise>, 1</otherwise>
            </choose>
            <choose>
                <when test="proxy.domainKey != null ">, #{proxy.domainKey}</when>
                <otherwise>, ''</otherwise>
            </choose>
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        proxy_type = VALUES(proxy_type), cost_time = VALUES(cost_time),
        failed_count = VALUES(failed_count), update_time = VALUES(update_time),
        `level` = VALUES(`level`), domain_key = VALUES(domain_key)
    </insert>

    <select id="fetchProxies" resultType="group.chaoliu.lightchaser.common.protocol.http.Proxy" parameterType="Proxy">
        SELECT p.`host`, p.`port`, p.`proxy_type` AS `proxyType`,
        p.`user_name` AS `userName`, p.`password`, p.`failed_count` AS failedCount, p.`domain_key` AS domainKey
        FROM `proxy` p
        WHERE 1 = 1
        <if test="proxyType != null">AND proxy_type = #{proxyType}</if>
        <if test="userName != null">AND user_name = #{userName}</if>
        <if test="password != null">AND password = #{password}</if>
        <if test="isInternet != null">AND is_internet = #{isInternet}</if>
        <if test="level != null">AND `level` >= #{level}</if>
    </select>

    <delete id="deleteIneffectiveProxies">
        DELETE FROM `proxy` WHERE failed_count >= #{failedCount};
    </delete>

</mapper>